using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Windows.Forms;



namespace DvtkHighLevelInterface.UserInterfaces
{
	/// <summary>
	/// This class implements the user activity control used in HliInternalForm.
	/// </summary>
	internal class UserControlActivityLogging : System.Windows.Forms.UserControl
	{
		//
		// - Generated by Visual Studio -
		//

		private System.Windows.Forms.RichTextBox richTextBoxActivityLogging;
		/// <summary> 
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.Container components = null;

		#region Component Designer generated code
		/// <summary> 
		/// Required method for Designer support - do not modify 
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.richTextBoxActivityLogging = new System.Windows.Forms.RichTextBox();
			this.SuspendLayout();
			// 
			// richTextBoxActivityLogging
			// 
			this.richTextBoxActivityLogging.Dock = System.Windows.Forms.DockStyle.Fill;
			this.richTextBoxActivityLogging.HideSelection = false;
			this.richTextBoxActivityLogging.Location = new System.Drawing.Point(0, 0);
			this.richTextBoxActivityLogging.Name = "richTextBoxActivityLogging";
			this.richTextBoxActivityLogging.Size = new System.Drawing.Size(304, 264);
			this.richTextBoxActivityLogging.TabIndex = 0;
			this.richTextBoxActivityLogging.Text = "";
			// 
			// UserControlActivityLogging
			// 
			this.Controls.Add(this.richTextBoxActivityLogging);
			this.Name = "UserControlActivityLogging";
			this.Size = new System.Drawing.Size(304, 264);
			this.ResumeLayout(false);

		}
		#endregion



		//
		// - Fields -
		//

		/// <summary>
		/// The identifier of the last Thread that has logged text.
		/// Equal to null if no Thread has logged yet.
		/// </summary>
		String identifierLastLoggingThread = null;

		/// <summary>
		/// See property WriteHandler.
		/// </summary>
		private WriteDelegate writeHandler = null;



		//
		// - Constructors -
		//

		/// <summary>
		/// Default constructor.
		/// </summary>
		public UserControlActivityLogging()
		{
			// This call is required by the Windows.Forms Form Designer.
			InitializeComponent();           

			writeHandler = new WriteDelegate(this.Write);
		}

		/// <summary> 
		/// Clean up any resources being used.
		/// </summary>
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}



		//
		// - Delegates -
		//

		/// <summary>
		/// Delegate for the Write method.
		/// </summary>
		public delegate void WriteDelegate(Thread thread, String text, System.Drawing.Color color);



		//
		// - Properties -
		//

		/// <summary>
		/// Use the Control.Invoke method when accessing a control from another thread then the thread
		/// in which the control is created. 
		/// 
		/// Using this handler in combination with the Invoke method logs text from a Thread.
		/// </summary>
		public WriteDelegate WriteHandler
		{
			get
			{
				return(this.writeHandler);
			}
		}



		//
		// - Methods -
		//

		/// <summary>
		/// Log text from a Thread.
		/// </summary>
		/// <param name="thread">The Thread.</param>
		/// <param name="text">The text.</param>
		/// <param name="color">The color of the text.</param>
		public void Write(Thread thread, String text, System.Drawing.Color color)
		{
			String threadDescription = "";

			if (thread.Options.Identifier == null)
			{
				if (thread.Parent == null)
				{
					threadDescription = "Identifier not yet set. No parent Thread";
				}
				else
				{
					String parentThreadIdentifer = "";

					if (thread.Parent.Options.Identifier != null)
					{
						parentThreadIdentifer = thread.Parent.Options.Identifier;
					}

					threadDescription = "Identifier not yet set. Parent Thread is \"" + parentThreadIdentifer + "\"";
				}
			}
			else
			{
				threadDescription = thread.Options.Identifier;
			}

			// If the Thread hasn't logged text the last time, show the Thread identifier.
			if (this.identifierLastLoggingThread != threadDescription)
			{
				this.richTextBoxActivityLogging.SelectionColor = System.Drawing.Color.LightGreen;
				this.richTextBoxActivityLogging.AppendText("-----\r\n");
				this.richTextBoxActivityLogging.SelectionColor = System.Drawing.Color.Blue;
				this.richTextBoxActivityLogging.AppendText("[" + threadDescription + "]\r\n");
				this.identifierLastLoggingThread = threadDescription;
			}

			this.richTextBoxActivityLogging.SelectionColor = System.Drawing.Color.LightGreen;
			this.richTextBoxActivityLogging.AppendText("-----\r\n");
			this.richTextBoxActivityLogging.SelectionColor = color;
			this.richTextBoxActivityLogging.AppendText(text + "\r\n");

			// Remark: the rich text box will automatically scroll to the end
			// when the HideSelection property is set to false.
		}
	}
}
